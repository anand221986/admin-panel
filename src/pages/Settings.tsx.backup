import Layout from "@/components/Layout";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Switch } from "@/components/ui/switch";
import { Textarea } from "@/components/ui/textarea";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogClose,
} from "@/components/ui/dialog";
import {
  Select,
  SelectContent,
  SelectItem,
  S            <TabsContent value="templates">
              <div className="space-y-6">
                <div>
                  <h2 className="text-3xl font-bold tracking-tight">Templates</h2>
                  <p className="text-gray-600 mt-2">
                    Manage your templates for email, SMS, notes, and AIRA communications.
                  </p>
                </div>

                <div className="max-w-4xl">
                  <TemplateSection
                    title="Email Templates"
                    type="email"
                    icon="✉️"
                  />
                  <TemplateSection
                    title="SMS Templates"
                    type="sms"
                    icon="💬"
                  />
                  <TemplateSection
                    title="Notes Templates"
                    type="notes"
                    icon="📝"
                  />
                  <TemplateSection
                    title="AIRA Templates"
                    type="aira"
                    icon="🤖"
                  />
                </div>

                {/* Template Creation Dialogs */}
                <AddTemplateDialog
                  type="email"
                  title="Add Email Template"
                  isOpen={dialogs.email}
                  onClose={closeDialog}
                />
                <AddTemplateDialog
                  type="sms"
                  title="Add SMS Template"
                  isOpen={dialogs.sms}
                  onClose={closeDialog}
                />
                <AddTemplateDialog
                  type="notes"
                  title="Add Notes Template"
                  isOpen={dialogs.notes}
                  onClose={closeDialog}
                />
                <AddTemplateDialog
                  type="aira"
                  title="Add AIRA Template"
                  isOpen={dialogs.aira}
                  onClose={closeDialog}
                />
              </div>
            </TabsContent>

            <TabsContent value="security">lectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Avatar, AvatarFallback } from "@/components/ui/avatar";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Bell, User, Building, Mail, Shield, Save, FileText, ChevronDown, ChevronRight, X } from "lucide-react";
import { useState } from "react";

const Settings = () => {
  // Templates state management
  const [expandedSections, setExpandedSections] = useState({
    email: true,
    sms: true,
    notes: true,
    aira: true
  });

  const [dialogs, setDialogs] = useState({
    email: false,
    sms: false,
    notes: false,
    aira: false
  });

  const [formData, setFormData] = useState({
    templateName: '',
    templateType: '',
    subject: '',
    body: '',
    shareWithEveryone: false
  });

  // Templates functions
  const toggleSection = (section) => {
    setExpandedSections(prev => ({
      ...prev,
      [section]: !prev[section]
    }));
  };

  const openDialog = (type) => {
    setDialogs(prev => ({ ...prev, [type]: true }));
    setFormData({
      templateName: '',
      templateType: '',
      subject: '',
      body: '',
      shareWithEveryone: false
    });
  };

  const closeDialog = (type) => {
    setDialogs(prev => ({ ...prev, [type]: false }));
  };

  const handleSave = (type) => {
    console.log(`Saving ${type} template:`, formData);
    closeDialog(type);
  };

  const handleCancel = (type) => {
    closeDialog(type);
  };

  const TemplateSection = ({ title, type, icon }) => (
    <div className="border border-gray-200 rounded-lg mb-4">
      <div
        onClick={() => toggleSection(type)}
        className="flex items-center justify-between p-4 cursor-pointer hover:bg-gray-50"
      >
        <div className="flex items-center space-x-3">
          <div className="w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center">
            {expandedSections[type] ? (
              <ChevronDown className="w-4 h-4 text-white" />
            ) : (
              <ChevronRight className="w-4 h-4 text-white" />
            )}
          </div>
          <span className="text-lg font-medium text-blue-600">{title}</span>
        </div>
        <Button
          onClick={(e) => {
            e.stopPropagation();
            openDialog(type);
          }}
          variant="outline"
          className="text-blue-600 border-blue-200 hover:border-blue-300"
        >
          Add template
        </Button>
      </div>
      {expandedSections[type] && (
        <div className="px-4 pb-4 border-t border-gray-100 bg-gray-50">
          <div className="py-4 text-gray-500 text-center">
            No templates added yet
          </div>
        </div>
      )}
    </div>
  );

  const AddTemplateDialog = ({ type, title, isOpen, onClose }) => (
    <Dialog open={isOpen} onOpenChange={() => onClose(type)}>
      <DialogContent className="sm:max-w-2xl">
        <DialogHeader>
          <DialogTitle>{title}</DialogTitle>
          <DialogClose asChild>
            <Button variant="ghost" size="sm" className="absolute right-4 top-4">
              <X className="w-4 h-4" />
            </Button>
          </DialogClose>
        </DialogHeader>

        <div className="space-y-4">
          <div className="grid grid-cols-2 gap-4">
            <div>
              <Label className="text-sm font-medium text-gray-700">
                TEMPLATE NAME <span className="text-red-500">*</span>
              </Label>
              <Input
                placeholder="Enter template name..."
                value={formData.templateName}
                onChange={(e) => setFormData(prev => ({ ...prev, templateName: e.target.value }))}
                className="mt-2"
              />
            </div>
            <div>
              <Label className="text-sm font-medium text-gray-700">
                TEMPLATE TYPE <span className="text-red-500">*</span>
              </Label>
              <Select
                value={formData.templateType}
                onValueChange={(value) => setFormData(prev => ({ ...prev, templateType: value }))}
              >
                <SelectTrigger className="mt-2">
                  <SelectValue placeholder="Select a template type" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="general">General</SelectItem>
                  <SelectItem value="marketing">Marketing</SelectItem>
                  <SelectItem value="notification">Notification</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </div>

          {type === 'email' && (
            <div>
              <Label className="text-sm font-medium text-gray-700">
                SUBJECT
              </Label>
              <Input
                placeholder="Enter a subject"
                value={formData.subject}
                onChange={(e) => setFormData(prev => ({ ...prev, subject: e.target.value }))}
                className="mt-2"
              />
            </div>
          )}

          <div>
            <Label className="text-sm font-medium text-gray-700">
              BODY
            </Label>
            <div className="border border-gray-300 rounded-lg mt-2">
              {type === 'email' && (
                <div className="flex items-center space-x-2 p-2 border-b border-gray-200 bg-gray-50">
                  <select className="text-sm border-none bg-transparent">
                    <option>Div</option>
                  </select>
                  <select className="text-sm border-none bg-transparent">
                    <option>13px</option>
                  </select>
                  <button className="p-1 text-gray-600 hover:text-gray-800">
                    <strong>B</strong>
                  </button>
                  <select className="text-sm border-none bg-transparent">
                    <option>Arial</option>
                  </select>
                  <div className="flex space-x-1">
                    <button className="p-1 text-gray-600">A</button>
                    <button className="p-1 text-gray-600">U</button>
                    <button className="p-1 text-gray-600">🔗</button>
                    <button className="p-1 text-gray-600">📷</button>
                    <button className="p-1 text-gray-600">≡</button>
                    <button className="p-1 text-gray-600">☰</button>
                    <button className="p-1 text-gray-600">📎</button>
                  </div>
                </div>
              )}
              <Textarea
                placeholder={type === 'email' ? '' : 'Enter template content...'}
                value={formData.body}
                onChange={(e) => setFormData(prev => ({ ...prev, body: e.target.value }))}
                className="border-none focus:ring-0 resize-none"
                rows={8}
              />
            </div>
          </div>

          <div className="flex items-center space-x-2">
            <Checkbox
              id="shareWithEveryone"
              checked={formData.shareWithEveryone}
              onCheckedChange={(checked) => setFormData(prev => ({ ...prev, shareWithEveryone: !!checked }))}
            />
            <Label htmlFor="shareWithEveryone" className="text-sm text-gray-700">
              Share template with everyone
            </Label>
          </div>

          <div className="flex justify-end space-x-3 pt-4">
            <Button
              variant="outline"
              onClick={() => handleCancel(type)}
            >
              Cancel
            </Button>
            <Button
              onClick={() => handleSave(type)}
              className="bg-blue-600 hover:bg-blue-700"
            >
              Save
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );

  return (
    <Layout>
      <div className="space-y-6">
        <div className="flex justify-between items-center">
          <div>
            <h1 className="text-3xl font-bold text-slate-800">Settings</h1>
            <p className="text-slate-600 mt-1">
              Manage your account and system preferences.
            </p>
          </div>
        </div>

        <Tabs defaultValue="profile" className="space-y-6">
          <TabsList className="grid w-full grid-cols-6 bg-white/60 backdrop-blur-sm">
            <TabsTrigger value="profile" className="flex items-center gap-2">
              <User className="w-4 h-4" />
              Profile
            </TabsTrigger>
            <TabsTrigger value="company" className="flex items-center gap-2">
              <Building className="w-4 h-4" />
              Company
            </TabsTrigger>
            <TabsTrigger
              value="notifications"
              className="flex items-center gap-2"
            >
              <Bell className="w-4 h-4" />
              Notifications
            </TabsTrigger>
            <TabsTrigger value="email" className="flex items-center gap-2">
              <Mail className="w-4 h-4" />
              Email
            </TabsTrigger>
            <TabsTrigger value="templates" className="flex items-center gap-2">
              <FileText className="w-4 h-4" />
              Templates
            </TabsTrigger>
            <TabsTrigger value="security" className="flex items-center gap-2">
              <Shield className="w-4 h-4" />
              Security
            </TabsTrigger>
          </TabsList>

          <TabsContent value="profile">
            <Card className="border-0 shadow-sm bg-white/60 backdrop-blur-sm">
              <CardHeader>
                <CardTitle className="text-slate-800">
                  Profile Information
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="flex items-center gap-6">
                  <Avatar className="w-20 h-20">
                    <AvatarFallback className="bg-gradient-to-br from-blue-500 to-purple-500 text-white text-xl">
                      JD
                    </AvatarFallback>
                  </Avatar>
                  <div>
                    <Button variant="outline" className="bg-white/80">
                      Upload Photo
                    </Button>
                    <p className="text-sm text-slate-600 mt-2">
                      JPG, GIF or PNG. 1MB max.
                    </p>
                  </div>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div className="space-y-2">
                    <Label htmlFor="firstName">First Name</Label>
                    <Input
                      id="firstName"
                      placeholder="John"
                      className="bg-white/80"
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="lastName">Last Name</Label>
                    <Input
                      id="lastName"
                      placeholder="Doe"
                      className="bg-white/80"
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="email">Email</Label>
                    <Input
                      id="email"
                      type="email"
                      placeholder="john.doe@company.com"
                      className="bg-white/80"
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="phone">Phone</Label>
                    <Input
                      id="phone"
                      placeholder="+1 (555) 123-4567"
                      className="bg-white/80"
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="title">Job Title</Label>
                    <Input
                      id="title"
                      placeholder="HR Manager"
                      className="bg-white/80"
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="department">Department</Label>
                    <Select>
                      <SelectTrigger className="bg-white/80">
                        <SelectValue placeholder="Select department" />
                      </SelectTrigger>
                      <SelectContent className="bg-white/95 backdrop-blur-sm">
                        <SelectItem value="hr">Human Resources</SelectItem>
                        <SelectItem value="engineering">Engineering</SelectItem>
                        <SelectItem value="product">Product</SelectItem>
                        <SelectItem value="design">Design</SelectItem>
                        <SelectItem value="marketing">Marketing</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="bio">Bio</Label>
                  <Textarea
                    id="bio"
                    placeholder="Tell us about yourself..."
                    className="bg-white/80"
                    rows={3}
                  />
                </div>

                <Button className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700">
                  <Save className="w-4 h-4 mr-2" />
                  Save Changes
                </Button>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="company">
            <Card className="border-0 shadow-sm bg-white/60 backdrop-blur-sm">
              <CardHeader>
                <CardTitle className="text-slate-800">
                  Company Settings
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div className="space-y-2">
                    <Label htmlFor="companyName">Company Name</Label>
                    <Input
                      id="companyName"
                      placeholder="TalentFlow Inc."
                      className="bg-white/80"
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="website">Website</Label>
                    <Input
                      id="website"
                      placeholder="https://talentflow.com"
                      className="bg-white/80"
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="industry">Industry</Label>
                    <Select>
                      <SelectTrigger className="bg-white/80">
                        <SelectValue placeholder="Select industry" />
                      </SelectTrigger>
                      <SelectContent className="bg-white/95 backdrop-blur-sm">
                        <SelectItem value="technology">Technology</SelectItem>
                        <SelectItem value="finance">Finance</SelectItem>
                        <SelectItem value="healthcare">Healthcare</SelectItem>
                        <SelectItem value="education">Education</SelectItem>
                        <SelectItem value="retail">Retail</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="size">Company Size</Label>
                    <Select>
                      <SelectTrigger className="bg-white/80">
                        <SelectValue placeholder="Select size" />
                      </SelectTrigger>
                      <SelectContent className="bg-white/95 backdrop-blur-sm">
                        <SelectItem value="1-10">1-10 employees</SelectItem>
                        <SelectItem value="11-50">11-50 employees</SelectItem>
                        <SelectItem value="51-200">51-200 employees</SelectItem>
                        <SelectItem value="201-1000">
                          201-1000 employees
                        </SelectItem>
                        <SelectItem value="1000+">1000+ employees</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="address">Address</Label>
                  <Textarea
                    id="address"
                    placeholder="Company address..."
                    className="bg-white/80"
                    rows={3}
                  />
                </div>

                <Button className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700">
                  <Save className="w-4 h-4 mr-2" />
                  Save Changes
                </Button>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="notifications">
            <Card className="border-0 shadow-sm bg-white/60 backdrop-blur-sm">
              <CardHeader>
                <CardTitle className="text-slate-800">
                  Notification Preferences
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="space-y-4">
                  <div className="flex items-center justify-between">
                    <div>
                      <Label htmlFor="newApplications">New Applications</Label>
                      <p className="text-sm text-slate-600">
                        Get notified when new applications are received
                      </p>
                    </div>
                    <Switch id="newApplications" defaultChecked />
                  </div>

                  <div className="flex items-center justify-between">
                    <div>
                      <Label htmlFor="interviewReminders">
                        Interview Reminders
                      </Label>
                      <p className="text-sm text-slate-600">
                        Receive reminders before scheduled interviews
                      </p>
                    </div>
                    <Switch id="interviewReminders" defaultChecked />
                  </div>

                  <div className="flex items-center justify-between">
                    <div>
                      <Label htmlFor="candidateUpdates">
                        Candidate Updates
                      </Label>
                      <p className="text-sm text-slate-600">
                        Get notified when candidates update their status
                      </p>
                    </div>
                    <Switch id="candidateUpdates" />
                  </div>

                  <div className="flex items-center justify-between">
                    <div>
                      <Label htmlFor="weeklyReports">Weekly Reports</Label>
                      <p className="text-sm text-slate-600">
                        Receive weekly recruitment analytics reports
                      </p>
                    </div>
                    <Switch id="weeklyReports" defaultChecked />
                  </div>

                  <div className="flex items-center justify-between">
                    <div>
                      <Label htmlFor="systemUpdates">System Updates</Label>
                      <p className="text-sm text-slate-600">
                        Get notified about system maintenance and updates
                      </p>
                    </div>
                    <Switch id="systemUpdates" defaultChecked />
                  </div>
                </div>

                <Button className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700">
                  <Save className="w-4 h-4 mr-2" />
                  Save Preferences
                </Button>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="email">
            <Card className="border-0 shadow-sm bg-white/60 backdrop-blur-sm">
              <CardHeader>
                <CardTitle className="text-slate-800">
                  Email Templates
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="space-y-4">
                  <div className="space-y-2">
                    <Label htmlFor="applicationReceived">
                      Application Received
                    </Label>
                    <Textarea
                      id="applicationReceived"
                      placeholder="Email template for when applications are received..."
                      className="bg-white/80"
                      rows={4}
                      defaultValue="Dear {candidate_name}, Thank you for your application for the {job_title} position..."
                    />
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="interviewInvite">
                      Interview Invitation
                    </Label>
                    <Textarea
                      id="interviewInvite"
                      placeholder="Email template for interview invitations..."
                      className="bg-white/80"
                      rows={4}
                      defaultValue="Dear {candidate_name}, We would like to invite you for an interview for the {job_title} position..."
                    />
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="rejection">Rejection Email</Label>
                    <Textarea
                      id="rejection"
                      placeholder="Email template for rejection notifications..."
                      className="bg-white/80"
                      rows={4}
                      defaultValue="Dear {candidate_name}, Thank you for your interest in the {job_title} position..."
                    />
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="offer">Job Offer</Label>
                    <Textarea
                      id="offer"
                      placeholder="Email template for job offers..."
                      className="bg-white/80"
                      rows={4}
                      defaultValue="Dear {candidate_name}, We are pleased to offer you the position of {job_title}..."
                    />
                  </div>
                </div>

                <Button className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700">
                  <Save className="w-4 h-4 mr-2" />
                  Save Templates
                </Button>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="security">
            <Card className="border-0 shadow-sm bg-white/60 backdrop-blur-sm">
              <CardHeader>
                <CardTitle className="text-slate-800">
                  Security Settings
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="space-y-4">
                  <div className="space-y-2">
                    <Label htmlFor="currentPassword">Current Password</Label>
                    <Input
                      id="currentPassword"
                      type="password"
                      className="bg-white/80"
                    />
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="newPassword">New Password</Label>
                    <Input
                      id="newPassword"
                      type="password"
                      className="bg-white/80"
                    />
                  </div>

                  <div className="space-y-2">
                    <Label htmlFor="confirmPassword">Confirm Password</Label>
                    <Input
                      id="confirmPassword"
                      type="password"
                      className="bg-white/80"
                    />
                  </div>
                </div>

                <div className="space-y-4 pt-4 border-t">
                  <div className="flex items-center justify-between">
                    <div>
                      <Label htmlFor="twoFactor">
                        Two-Factor Authentication
                      </Label>
                      <p className="text-sm text-slate-600">
                        Add an extra layer of security to your account
                      </p>
                    </div>
                    <Switch id="twoFactor" />
                  </div>

                  <div className="flex items-center justify-between">
                    <div>
                      <Label htmlFor="sessionTimeout">Auto-logout</Label>
                      <p className="text-sm text-slate-600">
                        Automatically log out after period of inactivity
                      </p>
                    </div>
                    <Switch id="sessionTimeout" defaultChecked />
                  </div>
                </div>

                <Button className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700">
                  <Save className="w-4 h-4 mr-2" />
                  Update Security
                </Button>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </Layout>
  );
};

export default Settings;
